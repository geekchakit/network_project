name: Deploy to EC2
on:
  push:
    branches:
      - master
jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Build Next.js project
      run: pnpm run build

    # Add SSH setup step
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        cat >>~/.ssh/config <<END
        Host ec2
          HostName ${{ secrets.EC2_HOST }}
          User ${{ secrets.EC2_USER }}
          IdentityFile ~/.ssh/id_rsa
          StrictHostKeyChecking no
        END
      
    - name: Copy files via SSH
      uses: appleboy/scp-action@v0.1.2
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./*"
        target: "/home/${{ secrets.EC2_USER }}/${{ secrets.EC2_PATH }}"
        strip_components: 0
        overwrite: true
        
    - name: Execute remote SSH commands
      uses: appleboy/ssh-action@v0.1.2
      env:
        PNPM_HOME: "/home/${{ secrets.EC2_USER }}/.local/share/pnpm"
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script_stop: true
        script: |
          # Install Node.js if not already installed
          if ! command -v node &> /dev/null
          then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
          fi
          
          # Install pnpm if not already installed
          if ! command -v pnpm &> /dev/null
          then
              curl -fsSL https://get.pnpm.io/install.sh | sh -
              export PNPM_HOME="/home/${{ secrets.EC2_USER }}/.local/share/pnpm"
              case ":$PATH:" in
                *":$PNPM_HOME:"*) ;;
                *) export PATH="$PNPM_HOME:$PATH" ;;
              esac
          fi
          
          # Echo current directory and list files for debugging
          pwd
          ls -la
          
          # Navigate to project directory
          cd /home/${{ secrets.EC2_USER }}/${{ secrets.EC2_PATH }}
          echo "Changed to directory: $(pwd)"
          ls -la
          
          # Install project dependencies and build the project
          pnpm install
          pnpm run build
          
          # Install PM2 if not already installed
          if ! command -v pm2 &> /dev/null
          then
              sudo npm install -g pm2
          fi
          
          # Check if PM2 process exists and handle accordingly
          if pm2 list | grep -q "network_frontend"; then
            echo "Restarting existing PM2 process..."
            pm2 restart network_frontend
          else
            echo "Starting new PM2 process..."
            pm2 start npm --name "network_frontend" -- start
          fi
          
          # Show PM2 status
          pm2 list
